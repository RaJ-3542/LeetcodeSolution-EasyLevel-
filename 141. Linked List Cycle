/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {

        if(head == NULL || head->next == NULL){
            return false;
        }

        ListNode* prev = head;
        ListNode* nxt = head;
        while(prev != NULL && nxt != NULL){
            prev = prev->next;
            if(prev!=NULL){
                prev = prev->next;
            }
            nxt = nxt->next;
            if(prev == nxt){
                return true;
            }
        }
        return false;

        
    }
};
